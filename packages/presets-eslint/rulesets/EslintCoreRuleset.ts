import { type EslintRuleset } from "../EslintConfig.js"

export type EslintCoreRuleset = EslintRuleset<
	| "accessor-pairs"
	| "array-bracket-newline"
	| "array-bracket-spacing"
	| "array-callback-return"
	| "array-element-newline"
	| "arrow-body-style"
	| "arrow-parens"
	| "arrow-spacing"
	| "block-scoped-var"
	| "block-spacing"
	| "brace-style"
	| "camelcase"
	| "capitalized-comments"
	| "class-methods-use-this"
	| "comma-dangle"
	| "comma-spacing"
	| "comma-style"
	| "complexity"
	| "computed-property-spacing"
	| "consistent-return"
	| "consistent-this"
	| "constructor-super"
	| "curly"
	| "default-case-last"
	| "default-case"
	| "default-param-last"
	| "dot-location"
	| "dot-notation"
	| "eol-last"
	| "eqeqeq"
	| "for-direction"
	| "func-call-spacing"
	| "func-name-matching"
	| "func-names"
	| "func-style"
	| "function-call-argument-newline"
	| "function-paren-newline"
	| "generator-star-spacing"
	| "getter-return"
	| "grouped-accessor-pairs"
	| "guard-for-in"
	| "id-denylist"
	| "id-length"
	| "id-match"
	| "implicit-arrow-linebreak"
	| "indent"
	| "init-declarations"
	| "jsx-quotes"
	| "key-spacing"
	| "keyword-spacing"
	| "line-comment-position"
	| "linebreak-style"
	| "lines-around-comment"
	| "lines-between-class-members"
	| "max-classes-per-file"
	| "max-depth"
	| "max-len"
	| "max-lines-per-function"
	| "max-lines"
	| "max-nested-callbacks"
	| "max-params"
	| "max-statements-per-line"
	| "max-statements"
	| "multiline-comment-style"
	| "multiline-ternary"
	| "new-cap"
	| "new-parens"
	| "newline-per-chained-call"
	| "no-alert"
	| "no-array-constructor"
	| "no-async-promise-executor"
	| "no-await-in-loop"
	| "no-bitwise"
	| "no-caller"
	| "no-case-declarations"
	| "no-class-assign"
	| "no-compare-neg-zero"
	| "no-cond-assign"
	| "no-confusing-arrow"
	| "no-console"
	| "no-const-assign"
	| "no-constant-binary-expression"
	| "no-constant-condition"
	| "no-constructor-return"
	| "no-continue"
	| "no-control-regex"
	| "no-debugger"
	| "no-delete-var"
	| "no-div-regex"
	| "no-dupe-args"
	| "no-dupe-class-members"
	| "no-dupe-else-if"
	| "no-dupe-keys"
	| "no-duplicate-case"
	| "no-duplicate-imports"
	| "no-else-return"
	| "no-empty-character-class"
	| "no-empty-function"
	| "no-empty-pattern"
	| "no-empty-static-block"
	| "no-empty"
	| "no-eq-null"
	| "no-eval"
	| "no-ex-assign"
	| "no-extend-native"
	| "no-extra-bind"
	| "no-extra-boolean-cast"
	| "no-extra-label"
	| "no-extra-parens"
	| "no-extra-semi"
	| "no-fallthrough"
	| "no-floating-decimal"
	| "no-func-assign"
	| "no-global-assign"
	| "no-implicit-coercion"
	| "no-implicit-globals"
	| "no-implied-eval"
	| "no-import-assign"
	| "no-inline-comments"
	| "no-inner-declarations"
	| "no-invalid-regexp"
	| "no-invalid-this"
	| "no-irregular-whitespace"
	| "no-iterator"
	| "no-label-var"
	| "no-labels"
	| "no-lone-blocks"
	| "no-lonely-if"
	| "no-loop-func"
	| "no-loss-of-precision"
	| "no-magic-numbers"
	| "no-misleading-character-class"
	| "no-mixed-operators"
	| "no-mixed-spaces-and-tabs"
	| "no-multi-assign"
	| "no-multi-spaces"
	| "no-multi-str"
	| "no-multiple-empty-lines"
	| "no-negated-condition"
	| "no-nested-ternary"
	| "no-new-func"
	| "no-new-native-nonconstructor"
	| "no-new-symbol"
	| "no-new-wrappers"
	| "no-new"
	| "no-nonoctal-decimal-escape"
	| "no-obj-calls"
	| "no-object-constructor"
	| "no-octal-escape"
	| "no-octal"
	| "no-param-reassign"
	| "no-plusplus"
	| "no-promise-executor-return"
	| "no-proto"
	| "no-prototype-builtins"
	| "no-redeclare"
	| "no-regex-spaces"
	| "no-restricted-exports"
	| "no-restricted-globals"
	| "no-restricted-imports"
	| "no-restricted-properties"
	| "no-restricted-syntax"
	| "no-return-assign"
	| "no-return-await"
	| "no-script-url"
	| "no-self-assign"
	| "no-self-compare"
	| "no-sequences"
	| "no-setter-return"
	| "no-shadow-restricted-names"
	| "no-shadow"
	| "no-sparse-arrays"
	| "no-tabs"
	| "no-template-curly-in-string"
	| "no-ternary"
	| "no-this-before-super"
	| "no-throw-literal"
	| "no-trailing-spaces"
	| "no-undef-init"
	| "no-undef"
	| "no-undefined"
	| "no-underscore-dangle"
	| "no-unexpected-multiline"
	| "no-unmodified-loop-condition"
	| "no-unneeded-ternary"
	| "no-unreachable-loop"
	| "no-unreachable"
	| "no-unsafe-finally"
	| "no-unsafe-negation"
	| "no-unsafe-optional-chaining"
	| "no-unused-expressions"
	| "no-unused-labels"
	| "no-unused-private-class-members"
	| "no-unused-vars"
	| "no-use-before-define"
	| "no-useless-backreference"
	| "no-useless-call"
	| "no-useless-catch"
	| "no-useless-computed-key"
	| "no-useless-concat"
	| "no-useless-constructor"
	| "no-useless-escape"
	| "no-useless-rename"
	| "no-useless-return"
	| "no-var"
	| "no-void"
	| "no-warning-comments"
	| "no-whitespace-before-property"
	| "no-with"
	| "nonblock-statement-body-position"
	| "object-curly-newline"
	| "object-curly-spacing"
	| "object-property-newline"
	| "object-shorthand"
	| "one-var-declaration-per-line"
	| "one-var"
	| "operator-assignment"
	| "operator-linebreak"
	| "padded-blocks"
	| "padding-line-between-statements"
	| "prefer-arrow-callback"
	| "prefer-const"
	| "prefer-destructuring"
	| "prefer-exponentiation-operator"
	| "prefer-named-capture-group"
	| "prefer-numeric-literals"
	| "prefer-object-has-own"
	| "prefer-object-spread"
	| "prefer-promise-reject-errors"
	| "prefer-regex-literals"
	| "prefer-rest-params"
	| "prefer-spread"
	| "prefer-template"
	| "quote-props"
	| "quotes"
	| "radix"
	| "require-atomic-updates"
	| "require-await"
	| "require-unicode-regexp"
	| "require-yield"
	| "rest-spread-spacing"
	| "semi-spacing"
	| "semi-style"
	| "semi"
	| "sort-imports"
	| "sort-keys"
	| "sort-vars"
	| "space-before-blocks"
	| "space-before-function-paren"
	| "space-in-parens"
	| "space-infix-ops"
	| "space-unary-ops"
	| "spaced-comment"
	| "strict"
	| "switch-colon-spacing"
	| "symbol-description"
	| "template-curly-spacing"
	| "template-tag-spacing"
	| "unicode-bom"
	| "use-isnan"
	| "valid-typeof"
	| "vars-on-top"
	| "wrap-iife"
	| "wrap-regex"
	| "yield-star-spacing"
	| "yoda"
>
