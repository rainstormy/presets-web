{
	"$schema": "https://json.schemastore.org/package.json",
	"name": "@rainstormy/presets-eslint",
	"version": "1.0.0-alpha.3",
	"description": "A predefined, opinionated ESLint configuration suitable for any TypeScript project.",
	"keywords": [
		"eslint",
		"eslint-config"
	],
	"bugs": "https://github.com/rainstormy/presets-web/issues",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/rainstormy/presets-web.git",
		"directory": "packages/presets-eslint"
	},
	"license": "MIT",
	"author": "Steffen Diswal",
	"type": "module",
	"main": "dist/EslintPresets.js",
	"types": "dist/EslintPresets.d.ts",
	"files": [
		"dist"
	],
	"dependencies": {
		"@limegrass/eslint-plugin-import-alias": "1.1.0",
		"@typescript-eslint/eslint-plugin": "6.19.1",
		"@typescript-eslint/parser": "6.19.1",
		"eslint-import-resolver-typescript": "3.6.1",
		"eslint-plugin-eslint-comments": "3.2.0",
		"eslint-plugin-functional": "6.0.0",
		"eslint-plugin-import": "npm:eslint-plugin-i@2.29.1",
		"eslint-plugin-no-barrel-files": "1.1.0",
		"eslint-plugin-redundant-undefined": "1.0.0",
		"eslint-plugin-unicorn": "50.0.1",
		"tsconfig-paths": "3.15.0"
	},
	"devDependencies": {
		"@types/eslint": "8.56.2",
		"typescript": "5.3.3"
	},
	"peerDependencies": {
		"eslint": "8.x",
		"typescript": "5.x"
	},
	"//": {
		"dependencies": {
			"@limegrass/eslint-plugin-import-alias": "This ESLint plugin encourages the use of path aliases in import statements.",
			"@typescript-eslint/eslint-plugin": "This ESLint plugin covers TypeScript code. It must always match the version of `@typescript-eslint/parser`.",
			"@typescript-eslint/parser": "This ESLint parser enables TypeScript support. It must always match the version of `@typescript-eslint/eslint-plugin`.",
			"eslint-import-resolver-typescript": "This utility enables TypeScript and path alias support in `eslint-plugin-import`.",
			"eslint-plugin-eslint-comments": "This ESLint plugin covers the use of ESLint comments.",
			"eslint-plugin-functional": "This ESLint plugin encourages principles from the functional programming paradigm.",
			"eslint-plugin-import": "This ESLint plugin covers import statements and export declarations. We use the `eslint-plugin-i` variant.",
			"eslint-plugin-no-barrel-files": "This ESLint plugin forbids the use of barrel files.",
			"eslint-plugin-redundant-undefined": "This ESLint plugin covers the redundant use of undefined in optional type declarations.",
			"eslint-plugin-unicorn": "This ESLint plugin complements the built-in set of rules.",
			"tsconfig-paths": "This utility is a dependency of `eslint-plugin-import` and `@limegrass/eslint-plugin-import-alias`. This particular version restores compatibility with TypeScript 5."
		},
		"devDependencies": {
			"@types/eslint": "This package provides type definitions for ESLint configurations.",
			"typescript": "TypeScript is a statically typed programming language on top of JavaScript."
		},
		"peerDependencies": {
			"eslint": "The preset is made for ESLint. When declared as a peer dependency, the package manager will remind the user to install it.",
			"typescript": "TypeScript is a peer dependency of `@typescript-eslint/eslint-plugin`, as type-aware linting rules have been enabled."
		}
	}
}
