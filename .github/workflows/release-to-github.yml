# This workflow creates a draft GitHub release from a Git tag.
#
# It is triggered automatically by pushing a Git tag with a `v` prefix, as done by the `release-tag` workflow.
#
# It can be triggered manually via the GitHub CLI:
#   gh workflow run release-to-github.yml --ref <tag-name>
#   gh run watch
#
# It can be triggered manually via the GitHub web interface:
#   https://github.com/rainstormy/presets-web/actions/workflows/release-to-github.yml

name: Release / Create GitHub release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

# Cancel all previous runs of this workflow that are still in progress on the same branch.
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: release-to-github-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Minimise the permission scope of the default GitHub access token in this workflow.
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions
permissions:
  contents: read # Allows the workflow to check out the repository and to call the reusable `ci` workflow.

jobs:
  validate-software-quality:
    name: Validate software quality
    uses: ./.github/workflows/ci.yml

  create-github-release:
    needs: validate-software-quality
    name: Create GitHub release
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - name: Check out the repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1 (pinned to the commit SHA)
      - name: Extract the release version from the tag name
        id: get-release-version
        run: echo "RELEASE_VERSION=${TAG_NAME#v}" >> $GITHUB_OUTPUT
        env:
          TAG_NAME: ${{ github.ref_name }}
      - name: Create a draft GitHub release
        uses: rainstormy/github-action-release-to-github@b4baa6727161c1a47ddb9b1d5ea1efa9d5bcbb8c # https://github.com/rainstormy/github-action-release-to-github (pinned to the commit SHA)
        with:
          gh-auth-token: ${{ secrets.BOT_NIMBUS_GH_AUTH_TOKEN }}
          release-version: ${{ steps.get-release-version.outputs.RELEASE_VERSION }}
